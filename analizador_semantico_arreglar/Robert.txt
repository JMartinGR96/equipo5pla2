Robert
{
    begin_var
        char abc;
        int ve ,B,f,C;
        int a,b,c ,f;
        iÂ·nt ve2;
        float vf,h,j, k, l;
        char vc;
        bool vl ;
        list of int pe, pe2 ;
        list of float pf, pf2 ;
        list of char pc, pc2 ;
        list of bool pl ;
        list of int id;
        int id2;
    end_var

    int funcionA (int a1,float a2, char a3)
    {
        begin_var
        int x1, x2, a3 ;
        end_var
        char funcionB (char b1, bool b2)
        {
            begin_var
            float xf, x2 ;
            end_var
            float funcionC (bool c1, int c2)
            {
                begin_var
                float x4 ;
                end_var
                

                x1= 1 +ve2;
                ve=funcionA(2+3,4.5,'a');
                vf = funcionC(2,3,4,5,6,7);
                if ((c2>10)+2) then
                    c2= (c2-1) ;
                else
                    x1 = 3 ;
                
                return x4 ;
            }
           
            x2= xf*(funcionC(false,1)-funcionC(true,23))/10.0;
            while (x2*funcionC(false,1)-xf<10.0) 
                x2= x2*xf ;
        }
    }

    float funcionD (float d1)
    {

        begin_var
        char dato ;
        int valor ;
        end_var

        char funcionE (char e1, char e2)
        {
            sacar<- "introduzca dos caracteres: ";
            meter-> e1, e2 ;
            if (e1=='a') then
                return e1 ;
            else
                return ' ';
        }
        if (d1>0.0) then
        {
            begin_var
            int dato ;
            end_var

            dato= 2 ;
            dato= valor*20/dato ;
        }
        else {
            valor= valor * 100 ;
            d1= d1/1000.0 ;
        }
        return d1 ;
    }

    bool functionE (int a, int b)
    {
        begin_var
            int g;
        end_var
        
        return a > b;
    }
    pe=2*pe+22;
    pf = vf*pe;
}